//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.269
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LWisteria.StudiesOfOpenTK.ObjectiveOpenTK.Test.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LWisteria.StudiesOfOpenTK.ObjectiveOpenTK.Test.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   #version 330
        ///
        /////! output: vertex data
        ///in Vertex
        ///{
        ///	// normal vector of this plane
        ///	vec3 Normal;
        ///
        ///	// color of this plane
        ///	vec4 Color;
        ///} vertexGeometry;
        ///
        /////! output: color
        ///out vec4 outColor;
        ///
        ///
        /////! input: strength of ambient 
        ///uniform float ambient;
        ///
        /////! input: direction vector of light
        ///uniform vec3 light;
        ///
        /////! entry point
        ///void main()
        ///{
        ///	// calculate strength of dissusing
        ///	float diffuse = max(0, dot(vertexGeometry.Normal, -normalize(light)) );
        ///
        ///	// set diffusing color
        ///	outColor = ( [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string fragment {
            get {
                return ResourceManager.GetString("fragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   #version 330
        ///
        ///layout(points) in; 
        ///layout(triangle_strip, max_vertices=24) out;
        ///
        /////! input: view (camera)
        ///uniform mat4 view;
        ///
        /////! input: projection matrix
        ///uniform mat4 projection;
        ///
        /////! input: cube data
        ///in Cube
        ///{
        ///	//! center position
        ///	vec4 Position;
        ///
        ///	//! length of a edge
        ///	float Size;
        ///
        ///	//! color
        ///	vec4 Color;
        ///} cubeVertex[];
        ///
        /////! output: vertex data
        ///out Vertex
        ///{
        ///	// normal vector of this plane
        ///	vec3 Normal;
        ///
        ///	// color of this plane
        ///	vec4 Color;
        ///} vertexGeometry;
        ///
        /////! projecti [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string geometry {
            get {
                return ResourceManager.GetString("geometry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   #version 330
        ///
        /////! input: position of cube
        ///in vec3 cubePosition;
        ///
        /////! input: length of a edge of cube
        ///in float cubeSize;
        ///
        /////! input: color of cube
        ///in vec4 cubeColor;
        ///
        /////! output: cube data
        ///out Cube
        ///{
        ///	//! center position
        ///	vec4 Position;
        ///
        ///	//! length of a edge
        ///	float Size;
        ///
        ///	//! color
        ///	vec4 Color;
        ///} cubeVertex;
        ///
        /////! entry point
        ///void main()
        ///{
        ///	//! set position of cube
        ///	cubeVertex.Position = vec4(cubePosition, 1.0);
        ///
        ///	//! set size of cube
        ///	cubeVertex.Size = cubeSize;
        ///
        ///	//! set c [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string vertex {
            get {
                return ResourceManager.GetString("vertex", resourceCulture);
            }
        }
    }
}
